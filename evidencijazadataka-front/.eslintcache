[{"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\index.js":"1","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\Home.js":"2","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\services\\auth.js":"3","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\NotFound.js":"4","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\login\\Login.js":"5","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\zadaci\\Zadaci.js":"6","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\apis\\EvidencijaAxios.js":"7","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\zadaci\\AddZadaci.js":"8","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\zadaci\\EditZadatka.js":"9"},{"size":1926,"mtime":1612206254986,"results":"10","hashOfConfig":"11"},{"size":137,"mtime":1612015949451,"results":"12","hashOfConfig":"11"},{"size":540,"mtime":1612016039074,"results":"13","hashOfConfig":"11"},{"size":110,"mtime":1612015934551,"results":"14","hashOfConfig":"11"},{"size":1214,"mtime":1612015980380,"results":"15","hashOfConfig":"11"},{"size":6425,"mtime":1612206475796,"results":"16","hashOfConfig":"11"},{"size":450,"mtime":1612015900183,"results":"17","hashOfConfig":"11"},{"size":4635,"mtime":1612205465192,"results":"18","hashOfConfig":"11"},{"size":3183,"mtime":1612206231140,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"10wfikd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\index.js",[],["41","42"],"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\Home.js",[],"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\services\\auth.js",[],"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\NotFound.js",[],"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\login\\Login.js",[],"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\zadaci\\Zadaci.js",["43","44","45","46","47","48"],"import React from 'react';\r\nimport EvidencijaAxios from './../../apis/EvidencijaAxios';\r\nimport {Button, Form, Table} from \"react-bootstrap\";\r\n\r\nclass Zadaci extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            zadaci: [],\r\n            sprintovi: [],\r\n            search: {ime: \"\", sprintId: -1},\r\n            pageNo: 0,\r\n            totalPages: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getZadaci(0);\r\n        this.getSprintovi();\r\n    }\r\n    async getSprintovi(){\r\n        try{\r\n            let result = await EvidencijaAxios.get(\"/sprintovi\");\r\n            let sprintovi = result.data;\r\n            this.setState({sprintovi: sprintovi});\r\n            console.log(\"test1\");\r\n        }catch(error){\r\n            console.log(error);\r\n            alert(\"Greska pri pribavljanju sprintova\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getZadaci(page){\r\n        let config = {\r\n            params: {\r\n                pageNo: this.state.pageNo\r\n            },\r\n        }\r\n        if(this.state.search.ime != \"\"){\r\n            config.params.ime = this.state.search.ime;\r\n        }\r\n        if(this.state.search.sprintId != -1){\r\n            config.params.sprintId = this.state.search.sprintId;\r\n        }\r\n        EvidencijaAxios.get('/zadaci', config)\r\n        .then(res => {\r\n            // handle success\r\n            console.log(res);\r\n            this.setState({\r\n                \r\n                zadaci: res.data, \r\n                totalPages: res.headers[\"total-pages\"]\r\n             });\r\n       })\r\n       .catch(error => {\r\n           // handle error\r\n           console.log(error);\r\n           alert('Error occured please try again!');\r\n       });\r\n\r\n    }\r\n\r\n    goToAdd(){\r\n        this.props.history.push('/zadaci/add'); \r\n    }\r\n\r\n\r\n    doSearch(){\r\n        this.getZadaci(0);\r\n    }\r\n    deleteFromState(zadatakId) {\r\n        var zadaci = this.state.zadaci;\r\n        zadaci.forEach((element, index) => {\r\n            if (element.id === zadatakId) {\r\n                zadaci.splice(index, 1);\r\n                this.setState({zadaci: zadaci});\r\n            }\r\n        });\r\n    }\r\n\r\n    delete(zadatakId) {\r\n        EvidencijaAxios.delete('/zadaci/' + zadatakId)\r\n        .then(res => {\r\n            // handle success\r\n            console.log(res);\r\n            alert('Zadatak je uspesno obrisan!');\r\n            this.deleteFromState(zadatakId); // ili refresh page-a window.location.reload();\r\n        })\r\n        .catch(error => {\r\n            // handle error\r\n            console.log(error);\r\n            alert('Error occured please try again!');\r\n         });\r\n    }\r\n\r\n    goToEdit(zadatakId){\r\n        this.props.history.push('/zadaci/edit/'+ zadatakId); \r\n    }\r\n\r\n    async promenaStanja(id){\r\n        try {\r\n            await EvidencijaAxios.put('/zadaci/' +id +'/promenastanja', {});\r\n          this.getZadaci(0);\r\n        } catch (error){\r\n            alert(\"Nije moguce promeniti stanje!\")\r\n        }\r\n    }\r\n\r\n    renderZadaci(){\r\n        return this.state.zadaci.map((zadatak) =>{\r\n            return (\r\n                <tr key={zadatak.id}>\r\n                    <td>{zadatak.ime}</td>\r\n                    <td>{zadatak.zaduzeni}</td>\r\n                    <td>{zadatak.bodovi}</td>\r\n                    <td>{zadatak.sprintDTO.ime}</td>\r\n                    <td>{zadatak.stanjeDTO.ime}</td>\r\n                    <td><Button  disabled={zadatak.stanjeDTO.id === 1} variant=\"info\" onClick={() => this.promenaStanja(zadatak.id)}>Promena stanja</Button></td>\r\n                    <td><Button variant=\"warning\" onClick={() => this.goToEdit(zadatak.id)}>Edit</Button></td>\r\n                  <td><Button variant=\"danger\" onClick={() => this.delete(zadatak.id)}>Delete</Button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    searchValueInputChange(event) {\r\n        let control = event.target;\r\n    \r\n        let name = control.name;\r\n        let value = control.value;\r\n    \r\n        let search = this.state.search;\r\n        search[name] = value;\r\n    \r\n        this.setState({ search: search });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Zadaci</h1>\r\n                <div>\r\n                <Button onClick={() => this.goToAdd() }>Dodaj</Button> \r\n                <br/>\r\n                <Form style={{marginTop:35}}>\r\n                    <Form.Group>\r\n                        <Form.Label>Ime zadatka</Form.Label>\r\n                        <Form.Control name=\"ime\" as=\"input\" value={this.state.search.ime} onChange={(e) => this.searchValueInputChange(e)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Sprint</Form.Label>\r\n                        <Form.Control name=\"sprintId\" as=\"select\" value={this.state.search.prevoznikId}  onChange={(e) => this.searchValueInputChange(e)}>\r\n                        <option value={-1}></option>\r\n                                        {this.state.sprintovi.map((sprint) => {\r\n                                     return (\r\n                                    <option value={sprint.id} key={sprint.id}>\r\n                                        {sprint.ime}\r\n                                     </option>\r\n                                 );\r\n                                 })}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button onClick={() => this.doSearch()}>Pretraga</Button>\r\n                </Form>\r\n                <Table style={{marginTop:5}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Ime zadatka</th>\r\n                            <th>Zaduzeni</th>\r\n                            <th>Bodovi</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderZadaci()}\r\n                    </tbody>\r\n                </Table>\r\n                <div><Button disabled={this.state.pageNo==0} onClick={() => this.getZadaci(this.state.pageNo= this.state.pageNo-1)} >Previous</Button>\r\n                    <Button disabled={this.state.pageNo==this.state.totalPages-1} onClick={() =>  this.getZadaci(this.state.pageNo= this.state.pageNo+1)}>Next</Button></div>                 \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Zadaci;","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\apis\\EvidencijaAxios.js",[],"C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\zadaci\\AddZadaci.js",["49","50","51"],"import React from 'react';\r\nimport EvidencijaAxios from './../../apis/EvidencijaAxios';\r\n\r\nclass AddZadaci extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let zadatak = {\r\n            ime: \"\",\r\n            zaduzeni: \"\",\r\n            bodovi: 0,\r\n            sprint: null,\r\n            stanje: null\r\n        }\r\n        this.state = {zadatak: zadatak, sprintovi: [], stanja: []}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getSprintovi();\r\n        this.getStanja();\r\n    }\r\n\r\n    valueInputChanged(e) {\r\n        let input = e.target;\r\n    \r\n        let name = input.name;\r\n        let value = input.value;\r\n    \r\n        let zadatak = this.state.zadatak;\r\n        zadatak[name] = value;\r\n    \r\n        this.setState({ zadatak: zadatak });\r\n    }\r\n\r\n    stanjeSelectionChanged(e){\r\n\r\n        let stanjeId = e.target.value;\r\n        let stanje = this.state.stanja.find((stanje) => stanje.id == stanjeId);\r\n\r\n        let zadatak = this.state.zadatak;\r\n        zadatak.stanje = stanje;\r\n\r\n        this.setState({zadatak: zadatak});\r\n    }\r\n\r\n    async getSprintovi(){\r\n        try{\r\n            let result = await EvidencijaAxios.get(\"/sprintovi\");\r\n            let sprintovi = result.data;\r\n            this.setState({sprintovi: sprintovi});\r\n            console.log(\"test1\");\r\n        }catch(error){\r\n            console.log(error);\r\n            alert(\"Greska pri pribavljanju sprintova\");\r\n        }\r\n    }\r\n\r\n    async getStanja(){\r\n        try{\r\n            let result = await EvidencijaAxios.get(\"/stanja\");\r\n            let stanja = result.data;\r\n            this.setState({stanja: stanja});\r\n            console.log(\"test1\");\r\n        }catch(error){\r\n            console.log(error);\r\n            alert(\"Greska pri pribavljanju stanja\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async create(e){\r\n        e.preventDefault();\r\n\r\n        try{\r\n            let zadatak = this.state.zadatak;\r\n            let zadatakDTO = {\r\n                ime: zadatak.ime,\r\n                zaduzeni: zadatak.zaduzeni,\r\n                bodovi: zadatak.bodovi,\r\n                sprintDTO: zadatak.sprint,\r\n                stanjeDTO: zadatak.stanje\r\n            }\r\n\r\n            let response = await EvidencijaAxios.post(\"/zadaci\", zadatakDTO);\r\n         this.props.history.push(\"/zadaci\");\r\n    }catch(error){\r\n        alert(\"Grska prilkom snimanja zadatka\");\r\n    }\r\n    }\r\n\r\n    sprintSelectionChanged(e){\r\n\r\n        let sprintId = e.target.value;\r\n        let sprint = this.state.sprintovi.find((sprint) => sprint.id == sprintId);\r\n\r\n        let zadatak = this.state.zadatak;\r\n        zadatak.sprint = sprint;\r\n\r\n        this.setState({zadatak: zadatak});\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Dodavanje zadataka</h1>\r\n                <form>\r\n                <label htmlFor=\"pIme\">Ime zadatka</label>\r\n                <input id=\"pZaduzeni\" name=\"ime\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n                <label htmlFor=\"pIme\">Zaduzeni</label>\r\n                <input id=\"pZaduzeni\" name=\"zaduzeni\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n                <label htmlFor=\"pBodovi\">Bodovi</label>\r\n                <input id=\"pBodovi\" name=\"bodovi\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n                <label htmlFor=\"pSprint\">Sprintovi</label>\r\n                    \r\n                    <select id=\"pSprint\" onChange={event => this.sprintSelectionChanged(event)}>\r\n                        <option></option>\r\n                        {\r\n                            this.state.sprintovi.map((sprint) => {\r\n                                return (\r\n                                    <option key={sprint.id} value={sprint.id}>{sprint.ime}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </select><br/>\r\n                    <label htmlFor=\"pStanje\">Stanja</label>\r\n                    \r\n                    <select id=\"pStanje\" onChange={event => this.stanjeSelectionChanged(event)}>\r\n                        <option></option>\r\n                        {\r\n                            this.state.stanja.map((stanje) => {\r\n                                return (\r\n                                    <option key={stanje.id} value={stanje.id}>{stanje.ime}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </select><br/>\r\n                    <button onClick={(event)=>{this.create(event);}}>Dodaj</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddZadaci;","C:\\Modul3WebMVC\\evidencija1-front\\evidencija1-front\\src\\components\\zadaci\\EditZadatka.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":42,"column":34,"nodeType":"58","messageId":"59","endLine":42,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":45,"column":39,"nodeType":"58","messageId":"59","endLine":45,"endColumn":41},{"ruleId":"56","severity":1,"message":"60","line":181,"column":57,"nodeType":"58","messageId":"59","endLine":181,"endColumn":59},{"ruleId":"61","severity":1,"message":"62","line":181,"column":92,"nodeType":"63","endLine":181,"endColumn":102},{"ruleId":"56","severity":1,"message":"60","line":182,"column":56,"nodeType":"58","messageId":"59","endLine":182,"endColumn":58},{"ruleId":"61","severity":1,"message":"62","line":182,"column":114,"nodeType":"63","endLine":182,"endColumn":124},{"ruleId":"56","severity":1,"message":"60","line":39,"column":67,"nodeType":"58","messageId":"59","endLine":39,"endColumn":69},{"ruleId":"64","severity":1,"message":"65","line":86,"column":17,"nodeType":"66","messageId":"67","endLine":86,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":96,"column":70,"nodeType":"58","messageId":"59","endLine":96,"endColumn":72},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]